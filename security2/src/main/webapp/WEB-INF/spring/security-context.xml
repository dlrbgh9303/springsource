<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
		<bean id="userDetail" class="com.company.service.CustomUserDetailsService"/>
		<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		<bean id="customLoginSuccessHandler" class="com.company.handler.CustomLoginSuccessHandler"/>
		
		<security:http>
			<!-- 특정한 URI 접근 시 인터셉터를 활용해 접근 제한하기 -->
			<!-- <security:intercept-url pattern="/member" access="hasRole('ROLE_MEMBER')"/>
			<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/> -->
			
			
			<!-- 403 처리 -->
			<security:access-denied-handler error-page="/accessError"/>
			
			
		<!-- 로그인과 로그아웃 -->
			<security:form-login login-page="/customLogin"
							authentication-success-handler-ref="customLoginSuccessHandler"/>
			<security:logout invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"
				logout-success-url="/"/>
		</security:http>

		<!-- 두번째 작업 (로그인을 할 수 있는 기본 작업) -->
		<security:authentication-manager>
			<security:authentication-provider user-service-ref="userDetail">
				<security:password-encoder ref="bCryptPasswordEncoder"/>
			</security:authentication-provider>
		</security:authentication-manager>

		
</beans>
